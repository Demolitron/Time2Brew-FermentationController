<!DOCTYPE html>
<html>

<head>
  <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
  <link rel="stylesheet" type="css" href="app.css">
  <link rel="stylesheet" type="css" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.min.css">
  <link rel="stylesheet" type="css" href="https://cdnjs.cloudflare.com/ajax/libs/chartist/0.8.0/chartist.min.css">
  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap.min.css">

  <!-- Optional theme -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/css/bootstrap-theme.min.css">

  <!-- Latest compiled and minified JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
  
</head>

<body>
  <nav class="navbar navbar-inverse navbar-default">
    <div class="container">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="index.htm"><i class="fa fa-beer icon-white" onclick="updateStatus()"></i></a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav">
          <li><a href="status.htm">Device Status</a></li>
          <li class="active"><a href="temperatureProfiles.htm">Fermentation Profiles</a></li>
          <li><a href="equipmentProfiles.htm">Equipment Profiles</a></li>
          <li><a href="device.htm">Device</a></li>
        </ul>
      </div>
    </div>
  </nav>

  <div id="page-wrapper" class="container">
    <div class="flex-container-col" style="width: 100%">

      <h1>Temperature Profiles</h1>

      <div class="panel-group" id="accordion"></div>

    </div>
  </div>
  
  <script src="promisify.js "></script>  
  <script src="temperatureProfileAPI.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/rxjs/2.5.2/rx.all.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.0.0/mustache.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/chartist/0.8.0/chartist.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/flot/0.8.3/jquery.flot.time.min.js"></script>
  <script>
  var chartAPI = (function() {

  var createChart = function(placeholder, data, options) {
    var plot = $.plot(placeholder, data, options);
  };


  return {
    createChart: createChart
  };

})();
</script>

  <script id="profilePanelTemplate" type="x-tmpl-mustache">
    <div class="panel-heading" role="tab">
      <h4 class="panel-title">
        <p id="profCol" data-toggle="collapse" data-parent="#accordion" data-target="#{{collapseId}}">
          {{profileName}}
        </p>
        <h4>
    </div>
    <div id="{{collapseId}}" class="panel-collapse collapse" role="tabpanel">
      <div class="panel-body" id="{{bodyId}}"></div>
    </div>
  </script>

  <script id="profileStepsPanelTemplate" type="x-tmpl-mustache">
    <div class="panel-heading">
      <h4 class="panel-title">
        <p data-toggle="collapse" data-target="#{{collapseId}}">
          Steps
        </p>
        <h4>
    </div>
    <div id="{{collapseId}}" class="panel-collapse collapse">
      <div class="panel-body">
        <ol id="{{stepListId}}"></ol>
        <div id="{{stepChartId}}" style="width: 100%; height: 200px"></div>
      </div>
    </div>
  </script>

  <script id="profileInstancesPanelTemplate" type="x-tmpl-mustache">
    <div class="panel-heading">
      <h4 class="panel-title">
        <p data-toggle="collapse" data-target="#{{collapseId}}">
          Profile Runs
        </p>
        <h4>
    </div>
    <div id="{{collapseId}}" class="panel-collapse collapse">
      <div class="panel-body">
        <ul id="{{instanceListId}}"></ul>
      </div>
    </div>
  </script>

  <script id="instanceDataPanelTemplate" type="x-tmpl-mustache">
    <div class="panel-heading">
      <h4 class="panel-title">
        <p data-toggle="collapse" data-target="#{{collapseId}}">
          <i class="fa fa-line-chart"></i> {{date}}
        </p>
        <h4>
    </div>
    <div id="{{collapseId}}" class="panel-collapse collapse">
      <div class="panel-body">
        <div id="{{chartId}}" style="width: 100%; height: 200px"></div>
      </div>
    </div>
  </script>

  <script>
    function updateProfiles() {
      var profileList = document.getElementById('accordion');
      //clear the list
      while (profileList.firstChild) {
        profileList.removeChild(profileList.firstChild);
      }

      temperatureProfileAPI.getAllProfiles()
        .selectMany(
          function(profile) {
            return profile;
          })
        .subscribe(
          function(p) {

            var sub = Rx.Observable.forkJoin(
              Rx.Observable.return(p),
              temperatureProfileAPI.getProfileSteps(p.name),
              temperatureProfileAPI.getProfileInstances(p.name));

            sub
              .subscribe(function(x) {
                var profile = x[0];
                profile.steps = x[1];
                profile.instances = x[2];
                createProfilePanel(profile, profileList);

              });
          },
          function(err) {
            console.log('Error: ' + err);
          },
          function() {
            console.log('Complete');
          });
    }

    function createProfilePanel(profile, parent) {

      var profilePanel = document.createElement('div');
      profilePanel.setAttribute('class', 'panel panel-default');

      var htmlTemplate = document.getElementById('profilePanelTemplate').innerHTML;
      Mustache.parse(htmlTemplate);

      var collapseId = 'collapse' + profile.name.replace(/\s+/g, '');
      var bodyId = 'body' + profile.name.replace(/\s+/g, '');
      profilePanel.innerHTML = Mustache.render(htmlTemplate, {
        profileName: profile.name,
        collapseId: collapseId,
        bodyId: bodyId
      });

      parent.appendChild(profilePanel);

      var stepsParent = profilePanel.querySelector('#' + bodyId);
      createStepsPanel(profile.name, profile.steps, stepsParent);

      var instPnlParent = profilePanel.querySelector('#' + bodyId);
      createInstancePanel(profile.name, profile.instances, instPnlParent);

    }

    function createStepsPanel(profileName, steps, parent) {
      var collapseId = 'collapse' + profileName.replace(/\s+/g, '') + 'Steps';
      var stepListId = profileName.replace(/\s+/g, '') + 'StepList';
      var stepChartId = profileName.replace(/\s+/g, '') + 'StepListChartId';

      var stepListPanel = document.createElement('div');
      stepListPanel.setAttribute('class', 'panel panel-default');

      var htmlTemplate = document.getElementById('profileStepsPanelTemplate').innerHTML;
      Mustache.parse(htmlTemplate);

      stepListPanel.innerHTML = Mustache.render(htmlTemplate, {
        collapseId: collapseId,
        stepListId: stepListId,
        stepChartId: stepChartId
      });;

      var stepList = stepListPanel.querySelector('#' + stepListId);

      var stepData = [];
      var overallDuration = 0;
      for (var i = 0; i < steps.length; i++) {
        var entry = document.createElement('li');

        if (steps[i].startTemp == steps[i].endTemp) {
          var stepText = document.createTextNode("Hold at: " +
            steps[i].startTemp + ' \xB0F' + " for " + temperatureProfileAPI.formatTime(steps[i].duration));
          entry.appendChild(stepText);
          stepList.appendChild(entry);
        } else {
          var stepText = document.createTextNode("Ramp from " +
            steps[i].startTemp +
            ' \xB0F' + " to " +
            steps[i].endTemp + ' \xB0F' +
            " over " + temperatureProfileAPI.formatTime(steps[i].duration));

          entry.appendChild(stepText);
          stepList.appendChild(entry);
        }
        stepData.push([overallDuration, steps[i].startTemp]);
        overallDuration += steps[i].duration;
        stepData.push([overallDuration, steps[i].endTemp]);
      }

      parent.appendChild(stepListPanel);

      $("#" + collapseId).on('shown.bs.collapse', function() {
        var options = {
          series: {
            lines: {
              show: true
            },
            points: {
              show: true
            }
          }
        };
        var chartPanel = $("#" + stepChartId);
        var data = [{
          label: "Steps",
          data: stepData
        }];
        var plot = $.plot(chartPanel, data, options);

      });
    }

    function createInstancePanel(profileName, instances, parent) {
      var collapseId = 'collapse' + profileName.replace(/\s+/g, '') + 'Instances';
      var instanceListId = profileName.replace(/\s+/g, '') + 'InstanceList';
      var instanceListPanel = document.createElement('div');
      instanceListPanel.setAttribute('class', 'panel panel-default');

      var htmlTemplate = document.getElementById('profileInstancesPanelTemplate').innerHTML;
      Mustache.parse(htmlTemplate);

      instanceListPanel.innerHTML = Mustache.render(htmlTemplate, {
        collapseId: collapseId,
        instanceListId: instanceListId
      });

      parent.appendChild(instanceListPanel);

      temperatureProfileAPI.getProfileInstances(profileName)
        .subscribe(function(dates) {
          for (var i = 0; i < dates.length; i++) {
            var instanceId = dates[i].getTime() / 1000;
            var date = new Date(instanceId * 1000);
            var instanceList = $("#" + instanceListId)[0];
            createInstanceDataPanel(profileName, instanceList, instanceId, date)
          }
        });
    }

    //instanceId = seconds from epoch
    function createInstanceDataPanel(profileName, parent, instanceId, date) {
      var collapseId = 'collapse' + instanceId;
      var chartId = 'chart' + instanceId;
      var listItem = document.createElement('li');
      var instancePanel = document.createElement('div');
      instancePanel.setAttribute('class', 'panel panel-default');

      var htmlTemplate = document.getElementById('instanceDataPanelTemplate').innerHTML;
      Mustache.parse(htmlTemplate);

      instancePanel.innerHTML = Mustache.render(htmlTemplate, {
        collapseId: collapseId,
        chartId: chartId,
        date: date
      });
      listItem.appendChild(instancePanel);
      parent.appendChild(listItem);

      $("#" + collapseId).on('shown.bs.collapse', function() {
        if ($('#' + chartId).children().length == 0) {
          temperatureProfileAPI.getTrendData(profileName, instanceId)
            .subscribe(function(trendData) {
              var probe0Data = [];
              var probe1Data = [];
              var setpointData = [];

              for (var j = 0; j < trendData.records.length; j += 5) {

                var timeStamp = (instanceId + (j * 60)) * 1000;
                console.log(new Date(timeStamp));
                if (trendData.records[j].probe0Temp > 0) {
                  probe0Data.push([timeStamp, trendData.records[j].probe0Temp]);
                }
                if(trendData.records[j].probe1Temp > 0){
                  probe1Data.push([timeStamp, trendData.records[j].probe1Temp]);
                }

                setpointData.push([timeStamp, trendData.records[j].setpointTemp]);
              }
              var options = {
                xaxis: {
                  mode: "time",
                  timeformat: "%a %H:%M:%S"
                },
                series: {
                  lines: {
                    show: true
                  },
                  points: {
                    show: false
                  }
                }
              };

              var data = [{
                label: "Probe 0",
                data: probe0Data
              }, {
                label: "Probe 1",
                data: probe1Data
              }, {
                label: "Setpoint",
                data: setpointData
              }];
              var chartPanel = $("#" + chartId);
              chartAPI.createChart(chartPanel, data, options);
            });
        }
      });
    }

    window.onload = function() {
      updateProfiles();

    };
  </script>
</body>

</html>
